AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: >-
  UserManagement SAM APP

  An AWS Serverless Specification template for the UserManagement application for automating Active Directory user creation from a Sharepoint Workflow

Resources:
  addUserFromJson:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: addUserFromJson
      CodeUri: addUserFromJson/
      Handler: addUserFromJson.lambda_handler
      AutoPublishAlias: live
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "s3:GetObject"
                - "s3:ListBucket"
              Resources:
                - "arn:aws:s3:::*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "logs:CreateLogGroup"
              Resources:
                - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resources:
                - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/addUserFromJson:*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:CreateNetworkInterface"
                - "ec2:DeleteNetworkInterface"
                - "ec2:DescribeInstances"
                - "ec2:AttachNetworkInterface"
              Resources:
                - "*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetResourcePolicy"
                - "secretsmanager:GetSecretValue"
                - "secretsmanager:DescribeSecret"
                - "secretsmanager:ListSecretVersionIds"
              Resources:
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetRandomPassword"
                - "secretsmanager:ListSecrets"
              Resources:
                - "*"
      Description: "Adds users from an s3 bucket trigger and creates an Active Directory user with groups assigned by SBU and division."
      Runtime: python3.9
      MemorySize: 128
      Timeout: 30
  disableUserFromJson:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: disableUserFromJson/
      FunctionName: disableUserFromJson
      Handler: disableUserFromJson.lambda_handler
      AutoPublishAlias: live
      Description: "Disables users from a json located in an S3 bucket. Users are disabled or set to expire based on LAST_DAY."
      Runtime: python3.9
      Timeout: 30
      MemorySize: 128
      Architectures:
        - x86_64
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "s3:GetObject"
                - "s3:ListBucket"
              Resources:
                - "arn:aws:s3:::*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "logs:CreateLogGroup"
              Resources:
                - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resources:
                - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/disableUserFromJson:*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:CreateNetworkInterface"
                - "ec2:DeleteNetworkInterface"
                - "ec2:DescribeInstances"
                - "ec2:AttachNetworkInterface"
              Resources:
                - "*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetResourcePolicy"
                - "secretsmanager:GetSecretValue"
                - "secretsmanager:DescribeSecret"
                - "secretsmanager:ListSecretVersionIds"
              Resources:
                - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetRandomPassword"
                - "secretsmanager:ListSecrets"
              Resources:
                - "*"
